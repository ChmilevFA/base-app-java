plugins {
    id "java-test-fixtures"
    id 'org.unbroken-dome.test-sets' version "$testSetsVersion"
    id 'com.github.johnrengelman.shadow' version "$shadowJar"
    id "org.hidetake.swagger.generator" version "$swaggerGenerator"
}

testSets {
    testFunctional
}
check.dependsOn testFunctional
testFunctional.mustRunAfter test

dependencies {
    implementation project(":repository-schema")
    implementation project(":repository")
    implementation project(":action")

    implementation "io.javalin:javalin:$javalinVersion"
    implementation "com.fasterxml.jackson.dataformat:jackson-dataformat-yaml:$jacksonVersion"

    testImplementation "org.postgresql:postgresql:$postgresqlVersion"
    testImplementation "org.apache.httpcomponents:httpclient:$apacheHttpClientVersion"
    testImplementation "org.apache.commons:commons-lang3:$commonsLang3Version"
    testImplementation "org.mockito:mockito-core:$mockitoVersion"
    testImplementation "org.testcontainers:postgresql:$testcontainersVersion"

    testFixturesImplementation project(":repository")
    testFixturesImplementation "org.apache.commons:commons-lang3:$commonsLang3Version"

    swaggerUI "org.webjars:swagger-ui:$swaggerUiVersion"
}

ext {
    javaMainClass = "net.chmilevfa.templates.base.TemplateApplication"
}

swaggerSources {
    template {
        inputFile = file("$rootDir/docs/swagger.yml")
        code {
            language = "html2"
        }
        ui {
            doLast {
                copy {
                    from file("$rootDir/docs/index.html")
                    into outputDir
                }
            }
        }
    }
}

shadowJar {
    archiveBaseName.set("template-app")
    archiveClassifier.set("")
    archiveVersion.set("")
    mergeServiceFiles()

    from("$buildDir/swagger-ui-template", {
        into("swagger-ui")
        exclude("META-INF")
    })

    jar.manifest.attributes(["Main-Class": "${javaMainClass}"])

    dependsOn(generateSwaggerUI)
}
